The ``4-print_square`` module
============================

Using ``print_square``
---------------------

Import module:
    >>> print_square = __import__('4-print_square').print_square

Test Case 1: Normal print 10:
    >>> print_square(4)
    ####
    ####
    ####
    ####

Test Case 2: Normal print 3:
    >>> print_square(3)
    ###
    ###
    ###

Test Case 3: Normal print 2:
    >>> print_square(2)
    ##
    ##

Test Case 4: Normal print 1:
    >>> print_square(1)
    #

Test Case 5: Normal print 0:
    >>> print_square(0)

Test Case 6: Negative:
    >>> print_square(-10)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

Test Case 7: Float:
    >>> print_square(10.0)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test Case 8: Str:
    >>> print_square("foo")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test Case 9: None:
    >>> print_square(None)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test Case 10: Inf:
    >>> print_square(float('inf'))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test Case 11: Nan:
    >>> print_square(float('nan'))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test Case 12: Missing one argument:
    >>> print_square()
    Traceback (most recent call last):
    ...
    TypeError: print_square() missing 1 required positional argument: 'size'
